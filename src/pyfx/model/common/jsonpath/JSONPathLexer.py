# Generated from JSONPath.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4, 0, 20, 118, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5,
        2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2,
        13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7,
        19, 2, 20, 7, 20, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6,
        1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
        12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 4, 16, 81, 8, 16, 11,
        16, 12, 16, 82, 1, 17, 1, 17, 1, 17, 5, 17, 88, 8, 17, 10, 17, 12, 17, 91, 9, 17, 1, 17,
        3, 17, 94, 8, 17, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 100, 8, 18, 1, 19, 1, 19, 1, 19, 5,
        19, 105, 8, 19, 10, 19, 12, 19, 108, 9, 19, 3, 19, 110, 8, 19, 1, 20, 4, 20, 113, 8, 20,
        11, 20, 12, 20, 114, 1, 20, 1, 20, 1, 89, 0, 21, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13,
        7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18,
        37, 0, 39, 19, 41, 20, 1, 0, 5, 2, 0, 65, 90, 97, 122, 1, 1, 39, 39, 1, 0, 49, 57, 1, 0,
        48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 123, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0,
        0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0,
        0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
        0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0,
        0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 1, 43, 1, 0, 0, 0, 3, 45, 1, 0, 0, 0, 5, 47, 1, 0, 0, 0,
        7, 49, 1, 0, 0, 0, 9, 51, 1, 0, 0, 0, 11, 53, 1, 0, 0, 0, 13, 55, 1, 0, 0, 0, 15, 57, 1, 0,
        0, 0, 17, 60, 1, 0, 0, 0, 19, 62, 1, 0, 0, 0, 21, 64, 1, 0, 0, 0, 23, 66, 1, 0, 0, 0, 25, 70,
        1, 0, 0, 0, 27, 72, 1, 0, 0, 0, 29, 74, 1, 0, 0, 0, 31, 76, 1, 0, 0, 0, 33, 80, 1, 0, 0, 0,
        35, 84, 1, 0, 0, 0, 37, 99, 1, 0, 0, 0, 39, 109, 1, 0, 0, 0, 41, 112, 1, 0, 0, 0, 43, 44,
        5, 91, 0, 0, 44, 2, 1, 0, 0, 0, 45, 46, 5, 63, 0, 0, 46, 4, 1, 0, 0, 0, 47, 48, 5, 40, 0, 0,
        48, 6, 1, 0, 0, 0, 49, 50, 5, 41, 0, 0, 50, 8, 1, 0, 0, 0, 51, 52, 5, 93, 0, 0, 52, 10, 1,
        0, 0, 0, 53, 54, 5, 62, 0, 0, 54, 12, 1, 0, 0, 0, 55, 56, 5, 60, 0, 0, 56, 14, 1, 0, 0, 0,
        57, 58, 5, 61, 0, 0, 58, 59, 5, 61, 0, 0, 59, 16, 1, 0, 0, 0, 60, 61, 5, 44, 0, 0, 61, 18,
        1, 0, 0, 0, 62, 63, 5, 58, 0, 0, 63, 20, 1, 0, 0, 0, 64, 65, 5, 42, 0, 0, 65, 22, 1, 0, 0,
        0, 66, 67, 5, 91, 0, 0, 67, 68, 5, 42, 0, 0, 68, 69, 5, 93, 0, 0, 69, 24, 1, 0, 0, 0, 70,
        71, 5, 36, 0, 0, 71, 26, 1, 0, 0, 0, 72, 73, 5, 64, 0, 0, 73, 28, 1, 0, 0, 0, 74, 75, 5, 46,
        0, 0, 75, 30, 1, 0, 0, 0, 76, 77, 5, 46, 0, 0, 77, 78, 5, 46, 0, 0, 78, 32, 1, 0, 0, 0, 79,
        81, 7, 0, 0, 0, 80, 79, 1, 0, 0, 0, 81, 82, 1, 0, 0, 0, 82, 80, 1, 0, 0, 0, 82, 83, 1, 0, 0,
        0, 83, 34, 1, 0, 0, 0, 84, 89, 5, 39, 0, 0, 85, 88, 3, 37, 18, 0, 86, 88, 9, 0, 0, 0, 87,
        85, 1, 0, 0, 0, 87, 86, 1, 0, 0, 0, 88, 91, 1, 0, 0, 0, 89, 90, 1, 0, 0, 0, 89, 87, 1, 0, 0,
        0, 90, 93, 1, 0, 0, 0, 91, 89, 1, 0, 0, 0, 92, 94, 7, 1, 0, 0, 93, 92, 1, 0, 0, 0, 94, 36,
        1, 0, 0, 0, 95, 96, 5, 92, 0, 0, 96, 100, 5, 39, 0, 0, 97, 98, 5, 92, 0, 0, 98, 100, 5, 92,
        0, 0, 99, 95, 1, 0, 0, 0, 99, 97, 1, 0, 0, 0, 100, 38, 1, 0, 0, 0, 101, 110, 5, 48, 0, 0,
        102, 106, 7, 2, 0, 0, 103, 105, 7, 3, 0, 0, 104, 103, 1, 0, 0, 0, 105, 108, 1, 0, 0, 0,
        106, 104, 1, 0, 0, 0, 106, 107, 1, 0, 0, 0, 107, 110, 1, 0, 0, 0, 108, 106, 1, 0, 0, 0,
        109, 101, 1, 0, 0, 0, 109, 102, 1, 0, 0, 0, 110, 40, 1, 0, 0, 0, 111, 113, 7, 4, 0, 0, 112,
        111, 1, 0, 0, 0, 113, 114, 1, 0, 0, 0, 114, 112, 1, 0, 0, 0, 114, 115, 1, 0, 0, 0, 115,
        116, 1, 0, 0, 0, 116, 117, 6, 20, 0, 0, 117, 42, 1, 0, 0, 0, 9, 0, 82, 87, 89, 93, 99, 106,
        109, 114, 1, 6, 0, 0
    ]


class JSONPathLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    ROOT = 13
    CURRENT = 14
    SINGLE_DOT = 15
    DOUBLE_DOT = 16
    LETTER = 17
    STRING = 18
    INT = 19
    WS = 20

    channelNames = [u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>",
                    "'['", "'?'", "'('", "')'", "']'", "'>'", "'<'", "'=='", "','",
                    "':'", "'*'", "'[*]'", "'$'", "'@'", "'.'", "'..'"]

    symbolicNames = ["<INVALID>",
                     "ROOT", "CURRENT", "SINGLE_DOT", "DOUBLE_DOT", "LETTER", "STRING",
                     "INT", "WS"]

    ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6",
                 "T__7", "T__8", "T__9", "T__10", "T__11", "ROOT", "CURRENT",
                 "SINGLE_DOT", "DOUBLE_DOT", "LETTER", "STRING", "QUOTE",
                 "INT", "WS"]

    grammarFileName = "JSONPath.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None
